---
- name: Setup Workshop
  hosts: local
  vars:
    internal_registry: "false"
    git_clone_image_version: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.14.2"
    git_cli_image_version: "docker.io/alpine/git:v2.26.2"
    buildah_image_version: "quay.io/buildah/stable:v1.14.8"
    go_image_version: "registry.redhat.io/rhel8/go-toolset:1.13.4"
  tasks:
  - name: Create bin directory if necessary
    file:
      path: "~/bin"
      state: directory
      mode: "u=rwx,g=rwx,o=rw"

  - name: Create GitOps Operator Subscription
    k8s:
      kubeconfig: "{{ kubeconfig }}"
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          labels:
            operators.coreos.com/openshift-gitops-operator.openshift-operators: ""
          name: openshift-gitops-operator
          namespace: openshift-operators
        spec:
          channel: stable
          installPlanApproval: Automatic
          name: openshift-gitops-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
          startingCSV: openshift-gitops-operator.v1.1.1

  - name: Create Pipelines Operator Subscription
    k8s:
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: openshift-pipelines-operator
          namespace: openshift-operators
        spec:
          channel:  ocp-4.4
          name: openshift-pipelines-operator-rh
          source: redhat-operators
          sourceNamespace: openshift-marketplace

  - name: Set external registry image locations
    set_fact:
      git_clone_image: "{{ git_clone_image_version }}"
      git_cli_image: "{{ git_cli_image_version }}"
      buildah_image: "{{ buildah_image_version }}"
      go_image: "{{ go_image_version }}"
    when: internal_registry == "false"

  - name: Set internal registry image locations
    set_fact:
      git_clone_image: "{{ internal_registry }}/{{ git_clone_image_version }}"
      git_cli_image: "{{ internal_registry }}/{{ git_cli_image_version }}"
      buildah_image: "{{ internal_registry }}/{{ buildah_image_version }}"
      go_image: "{{ internal_registry }}/{{ go_image_version }}"
    when: internal_registry != "false"

  - name: Create ClusterRoleBinding for ArgoCD Operator ServiceAccount
    k8s:
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: gitops-cluster-admin
        subjects:
          - kind: ServiceAccount
            name: openshift-gitops-argocd-application-controller
            namespace: openshift-gitops
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin

  - name: Deploy workshop applications
    k8s:
      namespace: argocd
      src: "{{ playbook_dir }}/files/{{ item }}"
      state: "{{ state }}"
      kubeconfig: "{{ kubeconfig }}"
    loop:
      - workshop-argo-project-cr.yaml
      - workshop-sample-app-cr.yaml
      - workshop-sample-infra-cr.yaml
      - workshop-sample-app-ci-cr.yaml
    when: state == 'present'
...
